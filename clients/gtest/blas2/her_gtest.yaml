---
include: hipblas_common.yaml

Definitions:
  - &size_range
    - { N: -1, lda: -1 }
    - { N: 11, lda: 11 }
    - { N: 16, lda: 16 }
    - { N: 32, lda: 32 }
    - { N: 65, lda: 65 }

  - &incx_range
    - [ -1, 0, 2 ]

  - &alpha_range
    - [ -0.5, 2.0, 0.0 ]

  - &alpha_range_ILP64
    - { alpha: -0.5, alphai:  0.5 }

  - &batch_count_range
    - [ -1, 0, 1, 2, 10 ]

Tests:
  - name: her_general
    category: quick
    function: her
    precision: *single_double_precisions_complex
    uplo: [ 'L', 'U' ]
    alpha: *alpha_range
    matrix_size: *size_range
    incx: *incx_range
    api: [ FORTRAN, C, FORTRAN_64, C_64 ]

  - name: her_batched_general
    category: quick
    function: her_batched
    precision: *single_double_precisions_complex
    uplo: [ 'L', 'U' ]
    alpha: *alpha_range
    matrix_size: *size_range
    incx: *incx_range
    batch_count: *batch_count_range
    api: [ FORTRAN, C, FORTRAN_64, C_64 ]
    backend_flags: AMD

  - name: her_strided_batched_general
    category: quick
    function: her_strided_batched
    precision: *single_double_precisions_complex
    uplo: [ 'L', 'U' ]
    alpha: *alpha_range
    matrix_size: *size_range
    incx: *incx_range
    batch_count: *batch_count_range
    stride_scale: [ 1.0, 2.5 ]
    api: [ FORTRAN, C, FORTRAN_64, C_64 ]
    backend_flags: AMD

# ILP64 tests
  - name: her_64
    category: pre_checkin #move to stress before merge
    function:
      - her: *single_precision_complex
    arguments:
      - { N: 2, lda: *c_pos_int64_t_value, incx: 1}
      - { N: 2, lda: 2, incx: *c_pos_int64_t_value}
    uplo: [ U ]
    stride_scale: [ 1.0 ]
    alpha_beta: *alpha_range_ILP64
    api: [ C_64 ]
    os_flags: [ LINUX ]

  - name: her_64
    category: pre_checkin #move to stress before merge
    function:
      - her_batched: *single_precision_complex
      - her_strided_batched: *single_precision_complex
    arguments:
      - { N: 2, lda: *c_pos_int64_t_value, incx: 1, batch_count: 1 }
      - { N: 2, lda: 2, incx: *c_pos_int64_t_value, batch_count: 1 }
      - { N: 2, lda: 2, stride_a: 2, incx: 1, batch_count: *c_grid_yz_require_passes }
    uplo: [ L ]
    stride_scale: [ 1.0 ]
    alpha_beta: *alpha_range_ILP64
    api: [ C_64 ]
    os_flags: [ LINUX ]

  - name: her_bad_arg
    category: pre_checkin
    function:
      - her_bad_arg
    precision: *single_double_precisions_complex
    api: [ FORTRAN, C, FORTRAN_64, C_64 ]
    backend_flags: AMD

  - name: her_bad_arg
    category: pre_checkin
    function:
      - her_bad_arg
    precision: *single_double_precisions_complex
    api: [ FORTRAN, C, FORTRAN_64, C_64 ]
    bad_arg_all: false
    backend_flags: NVIDIA

  - name: her_bad_arg
    category: pre_checkin
    function:
      - her_batched_bad_arg
      - her_strided_batched_bad_arg
    precision: *single_double_precisions_complex
    api: [ FORTRAN, C, FORTRAN_64, C_64 ]
    backend_flags: AMD
...
